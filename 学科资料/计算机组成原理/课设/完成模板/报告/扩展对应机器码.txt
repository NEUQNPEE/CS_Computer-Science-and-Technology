reg[1]是reg1_read_o reg[2]是reg2_read_o

LUI  001111 00000 00011 00000000FFFFFFFF->3C0300FF

ADDU $2,$1,$3 ->00000 00010 00001 00011 00000 100001
ADDIU $2,$3,255 ->001001 00010 00011 0000000011111111-> 244300FF
SUBU $2,$1,$3 ->000000 00010 00001 00011 00000 100011 -> 00411823
SW $10,$3,4 -> 101011 01010 00011 0000000000000100 -> AD430004
LW $10,$5,4 -> 100011 01010 00101 0000000000000100 -> 8D450004
BEQ $1,$2,2 ->  000100 00001 00010 0000000000000100 -> 10220004 //
BNE $1,$2,2 ->  000101 00001 00010 0000000000000010 -> 14220002 //
---TEST FOR 244300FF 244300FF
JAL 2 -> 000011 00000000000000000000000001 -> 0C000001 //
JR $1 -> 000000 00001 0000000000 00000 001000 -> 00200008 //

ADDI $2,$3,255 ->001000 00010 00011 0000000011111111 -> 204300ff
SLTI $1,$5,-1   -> 001010 00001 00101 1000000000000001 -> 28258001           将寄存器 rs 的值与有符号扩展至 32 位的立即数 imm 进行有符号数比较，如果寄存器 rs 中的值小，则寄存器 rt 置 1；否则寄存器 rt 置 0。
SLTIU $1,$5,max ->001011 00001 00101 0111111111111111 -> 2c257fff      将寄存器 rs 的值与有符号扩展至 32 位的立即数 imm 进行无符号数比较，如果寄存器 rs 中的值小，则寄存器 rt 置 1；否则寄存器 rt 置 0。
ANDI $2,$11,1 ->001100 00010 01011 0000000000000001 -> 304b0001
ORI $2,$11,24 -> 001101 00010 01011 0000000000011000 -> 344b0018              寄存器 rs 中的值与 0 扩展至 32 位的立即数 imm 按位逻辑或，结果写入寄存器 rt 中。
XORI $11,$11,24 -> 001110 01011 01011 0000000000011000 ->396b0018               寄存器 rs 中的值与 0 扩展至 32 位的立即数 imm 按位逻辑异或，结果写入寄存器 rt 中。
SLLV $11,$1,$12 -> 000000 01011 00001 01100 00000 000100 ->01616004          由寄存器 rs 中的值指定移位量，对寄存器 rt 的值进行逻辑左移，结果写入寄存器 rd 中。
SRAV $11,$1,$12 -> 000000 01011 00001 01100 00000 000111->01616007         由寄存器 rs 中的值指定移位量，对寄存器 rt 的值进行算术右移，结果写入寄存器 rd 中。
SRLV $11,$1,$12 -> 000000 01011 00001 01100 00000 000110 ->01616006          由寄存器 rs 中的值指定移位量，对寄存器 rt 的值进行逻辑右移，结果写入寄存器 rd 中。

MULT $1,$2 -> 000000 00001 00010 0000000000 011000 ->00220018
MULTU $1,$2 ->000000 00001 00010 0000000000 011001

DIV $1,$2 -> 000000 00010 00001 0000000000 011010 -> 0041001A
DIVU $1,$2 -> 000000 00010 00001 0000000000 011011 -> 0041001B


MTHI $4(rs) -> 000000 00100 000000000000000 010001 -> 00800011 rs->HI
MFHI $5(rd) -> 000000 0000000000 01001 00000 010000 ->00004810 HI->rd
MTLO $1(rs) -> 000000 00001 000000000000000 010011 ->00200013 rs->LO
MFLO $4(rd) -> 000000 0000000000 00100 00000 010010 ->00002012 LO->rs

